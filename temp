// get_next_line.h
#ifndef GET_NEXT_LINE_H
#define GET_NEXT_LINE_H

#include <stdlib.h>
#include <unistd.h>

char    *get_next_line(int fd);

#endif

// get_next_line.c
#include "get_next_line.h"

char	*get_next_line(int fd)
{
    char	*line = malloc(BUFFER_SIZE + 1);
    char	c;
    int		i = 0;
    int		bytes;

    if (fd < 0 || !line)
        return (NULL);
    while ((bytes = read(fd, &c, 1)) > 0 && i < BUFFER_SIZE)
    {
        line[i++] = c;
        if (c == '\n')
            break;
    }
    if (bytes < 0 || i == 0)
    {
        free(line);
        return (NULL);
    }
    line[i] = '\0';
    return (line);
}

// Main function for testing
int	main(int argc, char **argv)
{
    int		fd;
    char	*line;

    if (argc < 2)
    {
        write(1, "Please provide a file to read\n", 30);
        return (1);
    }
    fd = open(argv[1], O_RDONLY);
    if (fd < 0)
    {
        write(1, "Error opening file\n", 19);
        return (1);
    }
    while ((line = get_next_line(fd)) != NULL)
    {
        write(1, "Line: ", 6);
        write(1, line, strlen(line));
        free(line);
    }
    close(fd);
    return (0);
}
